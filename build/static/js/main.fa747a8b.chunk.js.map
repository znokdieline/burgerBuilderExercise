{"version":3,"sources":["Store/Actions/ActionTypes.js","shared/utility.js","hoc/Aux/Aux.js","Store/Actions/BurgerBuilder.js","Store/Actions/Order.js","Store/Actions/Auth.js","Axios-order.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","Assets/Images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/burgerBuilder/BurgerBuilder.js","containers/Auth/logout/Logout.js","hoc/asyncComponent/AsyncComponent.js","App.js","serviceWorker.js","Store/Reducers/BurgerBuilder.js","Store/Reducers/order.js","Store/Reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_ORDER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","autData","returnSecureToken","url","expirationData","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","expirationDate","Instance","create","baseURL","BackDrop","show","className","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","Button","disabled","btnType","join","Spinner","withErrorHandler","WrappedComponent","state","componentWillMount","reqInterceptor","interceptors","request","use","req","setState","resInterceptor","componentWillUnmount","eject","errorConfirmHandler","message","BurgerIngredient","ingredient","Burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","module","exports","Logo","height","alt","src","burgerLogo","NavigationItem","to","link","exact","activeClassName","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","drawerToggleClicked","isAuth","SideDrawer","AttachedClasses","open","closed","Layout","showSideDrawer","sideDrawerCloseHandler","sideDrawerToggleHandler","prevState","connect","BuildControl","label","removed","added","controls","BuildControls","price","toFixed","ctr","ingredientAdded","ingredientRemoved","purchaseable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinue","BurgerBuilder","purchasing","componentDidMount","onInitIngredients","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","sum","disableInfo","ings","orderSummary","burger","onIngredientAdd","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","actions","LogOut","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","AsyncComponent","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","Logout","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updateIngredient","updateState","updateIng","updateSt","setIngredients","fetchIngredientsFailed","Reducer","loading","purchased","purchaseOrderStart","purchaseBurgerSuccess","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.fa747a8b.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_ORDER_START = 'PURCHASE_ORDER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START ='AUTH_START';\nexport const AUTH_SUCCESS ='AUTH_SUCCESS';\nexport const AUTH_FAIL ='AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = ( oldObject, updatedProperties ) => {\n    return {\n        ...oldObject,\n        ...updatedProperties   \n    };\n};\n\nexport const checkValidity = ( value, rules ) => {\n    let isValid = true;\n    if(!rules){\n        return true;\n    }\n    if ( rules.required ){\n        isValid = value.trim() !== '' && isValid;\n    }\n    if ( rules.minLength ){\n        isValid = value.length >= rules.minLength && isValid;\n    }\n    if ( rules.maxLength  ){\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n    return isValid;\n};","const Aux = (props) => props.children;\n\nexport default Aux;","import * as actionTypes from './ActionTypes';\nimport axios from '../../Axios-order';\n\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients \n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-my-burger-7d339.firebaseio.com/ingredients.json')\n        .then( response => {\n            dispatch(setIngredients(response.data))\n        })\n        .catch(error => {\n            dispatch(fetchIngredientsFailed())\n        });\n    }\n}","import * as actionTypes from './ActionTypes';\nimport axios from '../../Axios-order'\n\nexport const purchaseBurgerBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData      \n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type:actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_ORDER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/order.json?auth=' + token, orderData)\n        .then(response => {\n            dispatch(purchaseBurgerBurgerSuccess(response.data.name, orderData))\n        })\n        .catch(error => {\n            dispatch(purchaseBurgerFail(error))\n        })\n    }\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n    }\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\n        axios.get('/order.json' + queryParams)\n            .then( res => {\n                const fetchOrders = [];\n                for (let key in res.data) {\n                    fetchOrders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                }\n                dispatch(fetchOrdersSuccess(fetchOrders));\n            })\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            });\n    }\n};","import axios from 'axios';\nimport * as actionTypes from './ActionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationData');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000 );\n    }\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const autData ={\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBJsaEqi9-aipokmwddc1CI5MaiL-fkHps'\n        if(!isSignup){\n            url= 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBJsaEqi9-aipokmwddc1CI5MaiL-fkHps';\n        }\n        axios.post( url, autData)\n            .then(response => {\n                const expirationData = new Date(new Date().getTime() + response.data.expiresIn * 1000 );\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationData', expirationData);\n                localStorage.setItem('userId', response.data.localId)\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn))\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error))\n            })\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationData'));\n            if(expirationDate <= new Date()){\n                dispatch(logout())\n            } else {\n                const userId = localStorage.getItem('userId')\n                dispatch(authSuccess(token, userId))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/ 1000))\n            }\n        }\n    }\n}","import axios from 'axios';\n\nconst Instance = axios.create({\n    baseURL: 'https://react-my-burger-7d339.firebaseio.com/'\n});\n\nexport default Instance;","import React from 'react';\n\n//imports\nimport './Backdrop.css';\n\nconst BackDrop = (props) => (\n    props.show ? <div className={'Backdrop'} onClick={props.clicked} ></div> : null\n);\n\nexport default BackDrop;","import React, { Component } from 'react';\n\n//imports\nimport './Modal.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport BackDrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n \n\n    render() {\n        return (\n            <Aux>\n                <BackDrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div \n                    className={'Modal'}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1': '0'\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n};\n\nexport default Modal;","import React from 'react';\n\n//imports\nimport './Button.css';\n\nconst Button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={['Button', [props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default Button;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <div className={\"Loader\"}>Loading...</div>\n);\n\nexport default Spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component  {\n        state = {\n            error: null\n        };\n\n        componentWillMount = () => {\n\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null})\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res =>  res, error => {\n                this.setState({error: error});\n            });\n        };\n        componentWillUnmount = () => {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({error: null})\n        }\n\n        render(){\n            return (\n                <Aux>\n                    <Modal \n                    show={this.state.error}\n                    modalClosed={this.errorConfirmHandler}\n                    >\n                        {this.state.error ? this.state.error.message : null}  \n                        {/* este error message es que envía firebase */}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n            );\n        };\n    };\n}\n\nexport default withErrorHandler;","/* eslint-disable default-case */\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n//imports\nimport './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n\n    render(){\n        let ingredient = null;\n\n        switch (this.props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={'BreadBottom'}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={'BreadTop'} >\n                    <div className={'Seeds1'}></div>\n                    <div className={'Seeds2'}></div>\n                </div>\n            )\n            break;\n        case('meat'):\n            ingredient = <div className={'Meat'}></div>;\n            break;\n        case('cheese'):\n            ingredient = <div className={'Cheese'}></div>;\n            break;\n        case('salad'):\n            ingredient = <div className={'Salad'}></div>;\n            break;\n        case('bacon'):\n            ingredient = <div className={'Bacon'}></div>\n            break;\n        default:\n            ingredient = null;\n    };\n    return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\n\n\nexport default BurgerIngredient;","import React from 'react';\n\n//imports\nimport './burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n\nconst Burger = (props) => {\n    let transformedIngredients =\n    Object.keys( props.ingredients )\n    .map( igKey => {\n        return[ ...Array(props.ingredients[igKey]) ].map((_,i) => {\n            return <BurgerIngredient key={igKey + i} type={igKey}/>\n        })\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el)   \n    },[]);\n    \n    if( transformedIngredients.length === 0){\n        transformedIngredients = <p>Please start adding elements</p>\n    }\n\n\n    return(\n        <div className={'Burger'}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\nexport default Burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\n\n//imports\nimport burgerLogo from '../../Assets/Images/burger-logo.png';\nimport './Logo.css';\n\nconst Logo = (props) => (\n    <div className={'Logo'} style={{height: props.height}}>\n        <img alt=\"MyBurger\" src={burgerLogo}/>\n    </div>\n);\n\nexport default Logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//imports\nimport './NavigationItem.css';\n\nconst NavigationItem = (props) => (\n    <li className={'NavigationItem'}>\n        <NavLink\n            to={props.link}\n            exact={props.exact}\n            activeClassName={'.active'}\n        >{props.children}</NavLink>\n    </li>\n);\n\nexport default NavigationItem;","import React from 'react';\n\n//imports\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst NavigationItems = (props) => (\n    <ul className={'NavigationItems'}>\n        <NavigationItem exact link=\"/\" >Burger Builder</NavigationItem>\n        { props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null }\n        { !props.isAuthenticated ? \n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem> :\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>\n        }\n    </ul>\n);\n\nexport default NavigationItems;\n","import React from 'react';\n\n//imports\nimport './DrawerToggle.css'\n\nconst DrawerToggle = ( props ) => (\n    <div onClick={props.clicked} className={'DrawerToggle'} >\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default DrawerToggle;","import React from 'react';\n\n//imported\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems'; \nimport  DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst Toolbar = (props) => (\n    <header className={'Toolbar'}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={'LogoTool'}>\n            <Logo/>\n        </div>\n        <nav className={'DesktopOnly'}>\n        <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n)\n\nexport default Toolbar;","import React from 'react';\n\n//imports\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport BackDrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux'\n\nconst SideDrawer = (props) => {\n    \n    let AttachedClasses = [ 'SideDrawer', 'Close' ];\n    if( props.open ){\n        AttachedClasses = ['SideDrawer', 'Open']\n    }\n\n    return(\n        <Aux>\n            <BackDrop show={props.open} clicked={props.closed} />\n            <div className={AttachedClasses.join(' ')} onClick={props.closed} >\n                <div className={'LogoSider'}>\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n            </div>\n        </Aux>\n    )\n};\n\nexport default SideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//imports\nimport './Layout.css'\nimport Aux from '../Aux/Aux';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\n//la forma correcta para estos function components es \"const name = () => ()\" no lleva \"()\"\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n    sideDrawerCloseHandler = () => {\n        this.setState({ showSideDrawer: false})\n    }\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState)=>{\n            return { showSideDrawer: !prevState.showSideDrawer }\n        })\n    }\n    render() {\n        return(\n            <Aux >\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler}\n                />\n                <SideDrawer\n                isAuth={this.props.isAuthenticated}\n                open={this.state.showSideDrawer} \n                closed={this.sideDrawerCloseHandler}/>\n                <main className={'Content'}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\n\n//imports\nimport './BuildControl.css';\n\nconst BuildControl = ( props ) => (\n    <div className={'BuildControl'} >\n        <div className={'Label'} >{props.label}</div>\n        <button \n            className={'Less'} \n            onClick={props.removed}\n            disabled={props.disabled}\n            >Less</button>\n        <button className={'More'} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default BuildControl;","import React from 'react';\n\n//imports\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type : 'salad'},\n    { label: 'Bacon', type : 'bacon'},\n    { label: 'Cheese', type : 'cheese'},\n    { label: 'Meat', type : 'meat'}\n];\n\nconst BuildControls = (props) => (\n    <div className={'BuildControls'}>\n    <p>Current Price: <strong>{ props.price.toFixed(2) }</strong></p>\n        {controls.map( ctr => (\n            <BuildControl \n            key={ctr.label}\n            label={ctr.label}\n            added={() => props.ingredientAdded(ctr.type)}\n            removed={() => props.ingredientRemoved(ctr.type)} \n            disabled={ props.disabled[ctr.type] }\n            />\n        ) )}\n        <button \n        className={'OrderButton'}\n        disabled={!props.purchaseable}\n        onClick={props.ordered}>{props.isAuth ? 'ORDER NOW!': 'SIGN UP TO ORDER'}</button>\n    </div>\n);\n\nexport default BuildControls;","import React from 'react';\n\n//imports\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button'\n\nconst OrderSummary = (props) => {\n\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey} >\n                <span style={{textTransform: 'capitalize'}} >{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            )\n        });\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger whit the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>Total Price: <strong> {props.price.toFixed(2)} </strong></p>\n            <p>Continue with check out?</p>\n            <Button btnType='Danger' clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinue}>CONTINUE</Button>\n        </Aux>\n    )\n};\n\nexport default OrderSummary;","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../Axios-order';\nimport Spinner  from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../Store/Actions/index';\n\n\n\n\nexport class BurgerBuilder extends Component{\n    //se va a manejar el estado de los ingredientes\n    state = { \n        purchasing: false,\n    };\n\n    componentDidMount = () => {\n        this.props.onInitIngredients();   \n    };\n\n    updatePurchaseState (ingredients) {\n    \n        const sum = Object.keys(ingredients)\n        .map(igKey => {\n            return ingredients[igKey]\n        })\n        .reduce((sum, el) => {\n            return sum + el\n        }, 0);\n        return sum > 0\n    };\n\n    purchaseHandler = () => {\n        if(this.props.isAuthenticated){\n            this.setState({purchasing: true});\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout')\n            this.props.history.push('/auth')\n        }\n    };\n\n    purchaseCancelHandler = () =>  {\n        this.setState({purchasing : false})\n    };\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n    \n\n    render(){\n        const disableInfo = {\n            ...this.props.ings\n        };\n        for( let key in disableInfo){\n            disableInfo[key] = disableInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>The ingredients can't be loaded</p> : <Spinner />\n        if(this.props.ings){\n            burger = (\n                <Aux>\n                    <Burger ingredients = {this.props.ings}/>\n                    <BurgerControls\n                        ingredientAdded = {this.props.onIngredientAdd}\n                        ingredientRemoved = {this.props.onIngredientRemoved}\n                        disabled = { disableInfo }\n                        price={this.props.price}\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                    />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n            ingredients={this.props.ings}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinue={this.purchaseContinueHandler}\n            price={this.props.price} />\n        }\n        \n        return(\n            <Aux>\n            <Modal\n            show={this.state.purchasing}>\n                {orderSummary}\n            </Modal>\n                {burger}\n            </Aux>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdd: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport * as actions from '../../../Store/Actions/index';\n\nclass LogOut extends Component {\n    componentDidMount = () => {\n        this.props.onLogout();\n    }\n    render(){\n        return <Redirect to=\"/\"/>\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(LogOut);","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null,\n        };\n\n        componentDidMount = () => {\n            importComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default})\n                })\n        };\n        render () {\n            const C = this.state.component;\n            return C ? <C {...this.props} /> : null\n        };\n    };\n};\n\nexport default asyncComponent;","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './Store/Actions/index';\n\n//imports\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/burgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/logout/Logout';\nimport AsyncComponent from './hoc/asyncComponent/AsyncComponent';\n\nconst asyncCheckout = AsyncComponent(() => {\n  return import('./containers/CheckOut/Checkout')\n});\n\nconst asyncOrders = AsyncComponent(() => {\n  return import('./containers/Orders/Orders')\n});\n\nconst asyncAuth = AsyncComponent(() => {\n  return import('./containers/Auth/Auth')\n})\n\nclass App extends Component {\n  componentDidMount = () => {\n    this.props.onTryAutoSignup();\n  }\n  render(){\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={asyncAuth}/>\n        <Route path='/' exact component={ BurgerBuilder } />\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path='/checkout' component={ asyncCheckout } />\n          <Route path='/orders' component={asyncOrders}/>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/auth' component={asyncAuth}/>\n          <Route path='/' exact component={ BurgerBuilder } />\n          <Redirect to=\"/\"/>\n        </Switch>\n      );\n    };\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n};\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../Actions/ActionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    ingredients: null, \n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\nconst addIngredient = (state, action) => {\n    const updateIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\n    const updatedIngredients = updateObject(state.ingredients, updateIngredient);\n    const updateState = {\n        ingredients:updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updateState);\n};\n\nconst removeIngredient = (state, action) => {\n    const updateIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\n    const updatedIng = updateObject(state.ingredients, updateIng);\n    const updateSt = {\n        ingredients:updatedIng,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updateSt);\n\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    })\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, { error: true })\n};\n//primero se implementa en burgerBuilder\n\nconst Reducer = (state = initialState, action) => {\n    // eslint-disable-next-line default-case\n    switch (action.type){\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action)\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\n        case actionTypes.FETCH_INGREDIENTS_FAILED: fetchIngredientsFailed(state, action);\n        break\n        default: return state;\n    }\n};\n\nexport default Reducer;","import * as actionTypes from '../Actions/ActionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    orders:[],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, { purchased: false });\n};\n\nconst purchaseOrderStart = (state, action) => {\n    return updateObject(state, { loading: true });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, { loading: false });\n};\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, { loading: true });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, { \n        orders: action.orders,\n        loading: false\n     })\n};\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action)            \n        case actionTypes.PURCHASE_ORDER_START: return purchaseOrderStart(state, action);   \n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);            \n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)            \n        default:\n            return state\n    };\n};\n\nexport default reducer;","import * as actionTypes from '../Actions/ActionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject(state, { error: null, loading: true})\n};\n\nconst authSuccess = ( state, action ) => {\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false \n    } );\n};\n\nconst authFail = ( state, action ) => {\n    return updateObject( state,{\n        error: action.error,\n        loading: false\n    } );\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        userId: null\n    });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {\n        authRedirectPath: action.path\n    })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\n        default: \n            return state;\n    };\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './Store/Reducers/BurgerBuilder';\nimport orderReducer from './Store/Reducers/order';\nimport authReducer from './Store/Reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n          <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}