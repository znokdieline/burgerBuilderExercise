{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["Order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ingredient","style","textTransform","display","margin","border","padding","key","className","Number","parseFloat","price","toFixed","Orders","componentDidMount","onFetchOrders","token","userId","orders","Spinner","this","loading","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6PAkCeA,G,MA9BD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAElC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACtC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAWJ,MAClBI,EAAWJ,KATN,KAScI,EAAWH,OATzB,QAYX,OACI,yBAAKW,UAAU,SACX,4CAAkBV,GAClB,qCAAU,uCAAaW,OAAOC,WAAWlB,EAAMmB,OAAOC,QAAQ,Q,wBCnBpEC,E,4MACFC,kBAAoB,WAChB,EAAKtB,MAAMuB,cAAc,EAAKvB,MAAMwB,MAAO,EAAKxB,MAAMyB,S,uDAGtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKC,KAAK5B,MAAM6B,UACZH,EAASE,KAAK5B,MAAM0B,OAAOnB,KAAI,SAAAuB,GAAK,OAChC,kBAAC,EAAD,CACIf,IAAKe,EAAMC,GACX9B,YAAa6B,EAAM7B,YACnBkB,MAAOW,EAAMX,YAKrB,6BACMO,O,GAjBGM,aAuCNC,uBAhBS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAMJ,MAAMJ,OACpBG,QAASK,EAAMJ,MAAMD,QACrBL,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,WAIA,SAAAW,GACvB,MAAO,CACHb,cAAe,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,QAK/DQ,CAA6CK,YAAiBjB,EAASkB,O","file":"static/js/5.f3a8d470.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Order.css';\n\nconst Order = (props) => {\n    //parce los ingredientes\n    const ingredients = [];\n    for ( let ingredientName in props.ingredients){\n        ingredients.push({\n            name: ingredientName, \n            amount: props.ingredients[ingredientName] })\n    }\n    const ingredientsOutput = ingredients.map(ingredient => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                 }} \n            key={ingredient.name}\n        >{ingredient.name} ({ingredient.amount})</span>\n    })\n\n    return(\n        <div className=\"Order\">\n            <p>Ingredientes: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n}; \n\n\nexport default Order;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport axios from '../../Axios-order';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../Store/Actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component{\n    componentDidMount = () => {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n    render(){\n        let orders = <Spinner/>\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id} \n                    ingredients={order.ingredients}\n                    price={order.price}\n                    />\n            ))\n        }\n        return(\n            <div>\n                { orders }\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders , axios));"],"sourceRoot":""}